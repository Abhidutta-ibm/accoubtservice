#spring.jpa.hibernate.ddl-auto=update
#spring.datasource.url=jdbc:mysql://google/sharepic?cloudSqlInstance=fluent-buckeye-377407:asia-south1:sharepic&socketFactory=com.google.cloud.sql.mysql.SocketFactory&user=root&password=sharepic
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.datasource.url=jdbc:mysql://34.100.160.246:3306/sharepic
#spring.cloud.gcp.sql.instance-connection-name=fluent-buckeye-377407:asia-south1:sharepic
#spring.datasource.username=root
#spring.datasource.password=sharepic
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
#spring.jpa.defer-datasource-initialization=true

#spring.cloud.gcp.sql.enabled=false
#spring.sql.init.mode=always
#spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect
#spring.cloud.gcp.sql.database-name=sharepic
#spring.cloud.gcp.sql.instance-connection-name=fluent-buckeye-377407:asia-south1:sharepic
#spring.cloud.gcp.sql.instance-connection-name=

spring.mvc.pathmatch.matching-strategy = ANT_PATH_MATCHER


##CLOUD-SQL-CONFIGURATIONS
spring.cloud.gcp.sql.database-name=sharepic
spring.cloud.gcp.sql.instance-connection-name=fluent-buckeye-377407:asia-south1:sharepic
  # So app starts despite "table already exists" errors.
spring.datasource.continue-on-error=true
  # Enforces database initialization
spring.sql.init.mode=always
spring.datasource.username=root
spring.datasource.password=sharepic
spring.cloud.gcp.project-id=fluent-buckeye-377407
spring.cloud.gcp.credentials.location=classpath:templates/fluent-buckeye-377407-0a90d70ab360.json
spring.main.allow-bean-definition-overriding=true

